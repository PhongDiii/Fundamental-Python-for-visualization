# -*- coding: utf-8 -*-
"""numpy_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iEfvwc9t-6f3vDpiNyZtuseQy7IoK9zA

Thao tac don gian voi Series
"""

import pandas as  pd 
import numpy as np
import random
np.random.seed(0)
s1 = pd.Series(np.random.randn(5))
print(s1)

# print(s1.empty)
# print(s1.axes)
# s2 = pd.Seires([1,2,3,4,5],index=['a','b','c','d','e'])
# print(s2)
# print(s2.axes)
# a = np.array([1,2,3,4,5])
# a1 = pd.Series(a)
# print(a1)
# s3 = pd.Series ([12,21,11], index=["idx1","idx2","idx3","idx4"])
# s3["idx3"] = 100
# print(s3)


# print(a[['a','b','c','d']])

# dict_1 = {"a" : 0, "b" : 1, "c" : 2, "d" : 3}
# b = pd.Series(dict_1)
# print(b)

# c = pd.Series("phong", index = [0,1,2,3])
# print (c)

"""Index[] va ham drop([index])"""

import pandas as  pd 
import numpy as np
s1 = pd.Series(np.random.randn(5))
print(s1)
print(s1.drop(s1.index[[0,2,4]])) # tai sao co 2 ngoac vuong

# print(s1.head(2))
# print(s1.tail(2))
# print(s1.size)
print(s1.values)
# print(s1.ndim)

"""Su dung ham lambda don gian"""

#@title Test function map and assign with lambda { vertical-output: true }
import pandas as  pd 
import numpy as np
import math 
np.random.seed(0)
s1 = pd.Series(np.random.randn(5))
print(s1.map(lambda x: x*x)) # ghi ho # x**2
# print(s1.describe())

# Thao tác trên thư viện math
s1 = s1.map(lambda x : math.pow(x,2))
s1

ser  = pd.Series( np.array([1,2,3,4,5,6,7,8,9]))
def  test_prime(number) :
  count = 0
  for i in range (1, number + 1) :
    if number % i ==  0:
      count +=1
      return count == 2
phong = ser.map(lambda x : test_prime(x))
ser[phong]


s1 = s1.map(lambda x : 1 if  x >= 1 else 0)
s1

import pandas as pd
speed = [0.1, 17.5, 40, 48, 52, 69, 88]
lifespan = [2, 8, 70, 1.5, 25, 12, 28]
index = ['snail', 'pig', 'elephant',
         'rabbit', 'giraffe', 'coyote', 'horse']
df = pd.DataFrame({'speed': speed,
                   'lifespan': lifespan}, index=index)
ax = df.plot.bar(rot=0)

import numpy as np
import pandas as pd
a=np.random.seed(1234)
print(a)
print("--------")
b=np.random.randn(10, 4)
print(b)
print("--------")

df = pd.DataFrame(np.random.randn(10, 4),
                  columns=['Col1', 'Col2', 'Col3', 'Col4'])
boxplot = df.boxplot(column=['Col1', 'Col2', 'Col3'])

import pandas as pd
v1 = pd.Series([1, 5, 9, 13])
v2 = pd.Series([10, 100, 1000, 10000])
v3 = pd.Series([0, 1, 2, 3])
df_left = pd.DataFrame({
    "v1": v1,
    "v2": v2,
    "v3": v3
    })
df_right = pd.DataFrame({
    "v3" : v3,
    "v4": [5, 5, 5, 5],
    "v5": [3, 2, 1, 0]
    })
df_concat = pd.concat([v1, v2, v3])
merge_result = df_left.merge(df_right, left_index=True, right_index=True) # on = "v3", how = inner
concat_result = pd.concat([df_left, df_right], sort=False) # how = outer
print(merge_result)
print('='*20)
print(concat_result)